package com.albandroid.filmoteca;
import java.util.ArrayList;
import java.util.HashMap;

import com.albandroid.filmoteca.utils.*;

import android.app.AlertDialog;
import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.Window;
import android.widget.ListView;
import android.widget.SimpleAdapter;


public class FilmotecaActivity extends ListActivity implements Runnable{
	ProgressDialog dialog;
	SimpleAdapter ListaPeliculas;
	ArrayList<HashMap<String, String>> Peliculas=new ArrayList<HashMap<String, String>>();
	/** Called when the activity is first created. */
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
    	//Esto quita la barra de titulo.
    	//this.requestWindowFeature(Window.FEATURE_NO_TITLE);
    	super.onCreate(savedInstanceState);
    	//Esto debe ir antes del setContentview
    	requestWindowFeature(Window.FEATURE_CUSTOM_TITLE);
    	setContentView(R.layout.main);
       	//El setFeatureInt debe ir despues del setContentView
    	getWindow().setFeatureInt(Window.FEATURE_CUSTOM_TITLE, R.layout.main_title);
    	if(!isNetworkAvailable()){
     		preguntaActivaNTW();
     	}else{
     	dialog = ProgressDialog.show(this, "", 
         		"Cargando...", true,false);
        Thread thread=new Thread(this);
        thread.start();
     		
     	}
    	
        
        // TODO Auto-generated catch block
        
			
    }
    public boolean onCreateOptionsMenu(Menu menu){
		super.onCreateOptionsMenu(menu);
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.acercade, menu);
		return true;
	}
    public boolean onOptionsItemSelected(MenuItem item){
		
		switch(item.getItemId()){
		case R.id.acercade:
			Intent acercade=new Intent(this,AcercaDeActivity.class);
			
			startActivity(acercade);
			break;
		}
		return false;
	}
    protected void onListItemClick(ListView l, View v, int position, long id) {
		super.onListItemClick(l, v, position, id);
		String url=Peliculas.get(position).get(Constants.PARAM_ID_URL);
		String fecha=Peliculas.get(position).get(Constants.PARAM_ID_FECHA);
		String titulo=Peliculas.get(position).get(Constants.PARAM_ID_TITULO);
		
	
		Intent i=new Intent(this,DetalleActivity.class);
		i.putExtra(Constants.PARAM_ID_URL, url);
		i.putExtra(Constants.PARAM_ID_FECHA, fecha);
		i.putExtra(Constants.PARAM_ID_TITULO, titulo);
		startActivity(i);

	}
    public boolean isNetworkAvailable() {
        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
        NetworkInfo networkInfo = cm.getActiveNetworkInfo();
        // if no network is available networkInfo will be null, otherwise check if we are connected
        if (networkInfo != null && networkInfo.isConnected()) {
            return true;
        }
        return false;
    }
	private void preguntaActivaNTW() {

		if(!isNetworkAvailable()){
			AlertDialog.Builder builder = new AlertDialog.Builder(this);
			builder.setMessage("Debe tener activa la conexión a internet.")
			.setCancelable(false)
			.setPositiveButton("Aceptar", new DialogInterface.OnClickListener() {
				public void onClick(DialogInterface dialog, int id) {
					startActivity(new Intent(android.provider.Settings.ACTION_WIFI_SETTINGS));
					finish();
				}
			});
			AlertDialog alert = builder.create();
			alert.show();
		}
	}
	public void exitDialog(){
    	AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setMessage("No ha sido posible realizar la conexión, intentelo de nuevo mas tarde.")
               .setCancelable(false)
               .setPositiveButton("Aceptar", new DialogInterface.OnClickListener() {
                   public void onClick(DialogInterface dialog, int id) {
                        try {
							finish();
						} catch (Throwable e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
                   }
               });
          
        AlertDialog alert = builder.create();
        alert.show();
    }
    private SimpleAdapter obtenerHtml (){
    	String[] from=new String[] {Constants.PARAM_ID_TITULO,Constants.PARAM_ID_FECHA};
		int[] to=new int[]{R.id.titulo,R.id.fecha};
    	String pagina = null;
    	String titulo,subtitulo,fecha,url;
    	pagina=ConexionHTTP.DownloadText(Constants.URL_SOURCE);
    	pagina=StringUtils.unescapeHTML(pagina);
    	HashMap<String, String> Item;
    	  
		
    	while(pagina.indexOf("url\">")>0){
    		Item=new HashMap<String, String>();
    		//Parseando URL de Sinopsis
    		pagina=pagina.substring(pagina.indexOf("Evento"));
    		pagina=pagina.substring(pagina.indexOf("href=\"")+6);
    		url=pagina.substring(0,pagina.indexOf("\""));
    		//Parseando el Titulo
    		pagina=pagina.substring(pagina.indexOf("url\">")+5, pagina.length());
    		titulo=pagina.substring(0, pagina.indexOf("</a>"));
    		if (titulo.indexOf("(")>0){
    			titulo=pagina.substring(0, titulo.indexOf("("));
    			subtitulo=pagina.substring(pagina.indexOf("("));
    		}else{
    			subtitulo="";
    		}
    		
    		//Parseando la Descripcion
    		pagina=pagina.substring(pagina.indexOf("description\">")+13,pagina.length());
    		fecha="-"+pagina.substring(0,pagina.indexOf("</span>"));
    		//Quitamos el espacio al final del título
    		while(fecha.substring(fecha.length()-1).equals(" ") ||
    				fecha.substring(fecha.length()-1).equals('\b') ||
    				fecha.substring(fecha.length()-1).equals('\t')||
    				fecha.substring(fecha.length()-1).equals('\r')){
    			fecha=fecha.substring(0,fecha.length()-1);
    			}
    		
    		while(titulo.substring(titulo.length()-1).equals(" "))
				titulo=titulo.substring(0,titulo.length()-1);
    		//Añado la informacion al HashMap
    		Item.put(Constants.PARAM_ID_TITULO, "\t"+titulo);
    		Item.put(Constants.PARAM_ID_SUBTITULO, subtitulo);
    		Item.put(Constants.PARAM_ID_FECHA, fecha);
    		Item.put(Constants.PARAM_ID_URL, url);
    		//Añado el HashMap al ArrayList
    		Peliculas.add(Item);
    		
    	}
    	SimpleAdapter ListaPeliculas=new SimpleAdapter(this,Peliculas,R.layout.pelicula_row,from,to);
    	return ListaPeliculas;
    }

	public void run() {
		// TODO Auto-generated method stub
		ListaPeliculas=obtenerHtml();
        handler.sendEmptyMessage(0);
	}

    private Handler handler = new Handler() {
            @Override
            public void handleMessage(Message msg) {
            	if(Peliculas.isEmpty()){
            		dialog.dismiss();
            		exitDialog();
            	}else{
            		setListAdapter(ListaPeliculas);
            		dialog.dismiss();
            	}
             	            	
            }
    };
}
